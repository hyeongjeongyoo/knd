spring:
  profiles:
    active: dev
  legacy:
    processing: true
  sql:
    init:
      continue-on-error: true # 에러가 있어도 계속 진행
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB
  file:
    upload-base-path: ${FILE_UPLOAD_DIR:./uploads}
    storage:
      type: ${FILE_STORAGE_TYPE:local} # local | s3
      local:
        base-path: ${FILE_STORAGE_LOCAL_BASE_PATH:./uploads}
      s3:
        bucket: ${FILE_STORAGE_S3_BUCKET:cms-files}
        region: ${FILE_STORAGE_S3_REGION:ap-northeast-2}
        cdn-url: ${FILE_STORAGE_S3_CDN_URL:}
    policy:
      max-size: ${FILE_POLICY_MAX_SIZE:52428800} # 50MB
      allowed-types: ${FILE_POLICY_ALLOWED_TYPES:image/*,application/pdf,application/msword,application/vnd.ms-excel}
    thumbnail:
      enabled: ${FILE_THUMBNAIL_ENABLED:true}
      width: ${FILE_THUMBNAIL_WIDTH:256}
      height: ${FILE_THUMBNAIL_HEIGHT:256}
      format: ${FILE_THUMBNAIL_FORMAT:webp}
  jackson:
    time-zone: Asia/Seoul
  datasource:
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.mariadb.jdbc.Driver}
    url: ${SPRING_DATASOURCE_URL:jdbc:mariadb://172.30.1.11:3306/arpina_new?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&useProxy=false}
    username: ${SPRING_DATASOURCE_USERNAME:handy}
    password: ${SPRING_DATASOURCE_PASSWORD:gosel@1224}
    hikari:
      maximum-pool-size: 70
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      cache-prep-stmts: true
      prep-stmt-cache-size: 250
      prep-stmt-cache-sql-limit: 2048
      use-server-prep-stmts: true

  config:
    use-legacy-processing: true
    import: optional:file:.env
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDB103Dialect
        format_sql: true
        jdbc:
          time_zone: Asia/Seoul
          batch_size: 50
          order_inserts: true
          order_updates: true
          batch_versioned_data: true
        types:
          print:
            banner: false
        globally_quoted_identifiers: true
        globally_quoted_identifiers_skip_column_definitions: true
        lock:
          timeout: 30000
        connection:
          isolation: 2
        query:
          timeout: 30000
    database-platform: org.hibernate.dialect.MariaDB103Dialect
    show-sql: true
    database: mysql
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  mvc:
    hiddenmethod:
      filter:
        enabled: true
    pathmatch:
      matching-strategy: ant-path-matcher
  main:
    allow-bean-definition-overriding: true
    web-application-type: servlet
    banner-mode: off
  security:
    filter:
      order: 10
  #  http:
  #    encoding:
  #      charset: UTF-8
  #      force: true
  #      enabled: true
  session:
    timeout: 1800 # 30 minutes
    cookie:
      max-age: 1800
server:
  servlet:
    context-path: /
    session:
      timeout: ${SERVER_SERVLET_SESSION_TIMEOUT:3600}
    encoding:
      charset: UTF-8
      force: true
      enabled: true
  port: ${SERVER_PORT:8080}

logging:
  level:
    root: ${LOG_LEVEL:DEBUG}
  file:
    name: ${LOG_FILE_NAME:backend}
    path: ${LOG_FILE_PATH:./log}
  logback:
    rollingpolicy:
      max-file-size: ${LOG_MAX_FILE_SIZE:10MB}
      max-history: ${LOG_MAX_HISTORY:30}

springdoc:
  version: v4.2.0
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: alpha
    doc-expansion: none
  api-docs:
    path: /v3/api-docs
    groups:
      enabled: true
  cache:
    disabled: true

Globals:
  LocalIp: ${GLOBALS_LOCAL_IP:127.0.0.1}
  DbType: ${GLOBALS_DB_TYPE:mariadb}
  pageUnit: ${GLOBALS_PAGE_UNIT:10}
  pageSize: ${GLOBALS_PAGE_SIZE:10}
  posblAtchFileSize: ${GLOBALS_POSBL_ATCH_FILE_SIZE:5242880}
  fileStorePath: ${GLOBALS_FILE_STORE_PATH:./uploads}
  addedOptions: ${GLOBALS_ADDED_OPTIONS:false}
  MainPage: ${GLOBALS_MAIN_PAGE:/cmm/main/mainPage.do}
  Allow:
    # Origin: ${GLOBALS_ALLOW_ORIGIN:http://localhost:3000}
  crypto:
    algoritm: ${GLOBALS_CRYPTO_ALGORITM:egovframe}
  fileUpload:
    Extensions:
      Images: ${GLOBALS_FILE_UPLOAD_EXTENSIONS_IMAGES:.gif.jpg.jpeg.png}
      Default: ${GLOBALS_FILE_UPLOAD_EXTENSIONS:.gif.jpg.jpeg.png.xls.xlsx}
  hsql:
    DriverClassName: ${GLOBALS_HSQL_DRIVER:net.sf.log4jdbc.DriverSpy}
    Url: ${GLOBALS_HSQL_URL:jdbc:log4jdbc:hsqldb:hsql://127.0.0.1/sampledb}
    UserName: ${GLOBALS_HSQL_USERNAME:sa}
    Password: ${GLOBALS_HSQL_PASSWORD:}
  mysql:
    DriverClassName: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.mariadb.jdbc.Driver}
    Url: ${SPRING_DATASOURCE_URL}
    UserName: ${SPRING_DATASOURCE_USERNAME}
    Password: ${SPRING_DATASOURCE_PASSWORD}
  oracle:
    DriverClassName: ${GLOBALS_ORACLE_DRIVER:oracle.jdbc.driver.OracleDriver}
    Url: ${GLOBALS_ORACLE_URL:jdbc:oracle:thin:@127.0.0.1:1521:egovfrm}
    UserName: ${GLOBALS_ORACLE_USERNAME:}
    Password: ${GLOBALS_ORACLE_PASSWORD:}
  altibase:
    DriverClassName: ${GLOBALS_ALTIBASE_DRIVER:Altibase.jdbc.driver.AltibaseDriver}
    Url: ${GLOBALS_ALTIBASE_URL:jdbc:Altibase://127.0.0.1:1721/egovfrm?encoding=UTF-8}
    UserName: ${GLOBALS_ALTIBASE_USERNAME:}
    Password: ${GLOBALS_ALTIBASE_PASSWORD:}
  tibero:
    DriverClassName: ${GLOBALS_TIBERO_DRIVER:com.tmax.tibero.jdbc.TbDriver}
    Url: ${GLOBALS_TIBERO_URL:jdbc:tibero:thin:@127.0.0.1:1821:egovfrm}
    UserName: ${GLOBALS_TIBERO_USERNAME:}
    Password: ${GLOBALS_TIBERO_PASSWORD:}
  cubrid:
    DriverClassName: ${GLOBALS_CUBRID_DRIVER:cubrid.jdbc.driver.CUBRIDDriver}
    Url: ${GLOBALS_CUBRID_URL:jdbc:cubrid:127.0.0.1:33000:cms_new:::?charset=utf-8}
    UserName: ${GLOBALS_CUBRID_USERNAME:}
    Password: ${GLOBALS_CUBRID_PASSWORD:}

Sns:
  naver:
    clientId: ${SNS_NAVER_CLIENT_ID:YOUR_CLIENT_ID}
    clientSecret: ${SNS_NAVER_CLIENT_SECRET:YOUR_CLIENT_SECRET}
    callbackUrl: ${SNS_NAVER_CALLBACK_URL:http://localhost:3000/login/naver/callback}
  kakao:
    clientId: ${SNS_KAKAO_CLIENT_ID:YOUR_CLIENT_ID}
    callbackUrl: ${SNS_KAKAO_CALLBACK_URL:http://localhost:3000/login/kakao/callback}

jwt:
  secret: ${JWT_SECRET:your-256-bit-secret-key-here-must-be-at-least-256-bits-long}
  expiration: ${JWT_EXPIRATION:3600000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:86400000}
  header: ${JWT_HEADER:Authorization}
  prefix: ${JWT_PREFIX:Bearer}
  access-token:
    validity-in-milliseconds: ${JWT_EXPIRATION:3600000}
  refresh-token:
    validity-in-milliseconds: ${JWT_REFRESH_EXPIRATION:86400000}
# Application specific configurations
app:
  api:
    base-url: ${GLOBALS_IP:http://localhost:${server.port:8080}}
  performance:
    enable-metrics: true
    slow-query-threshold: 1000

nice:
  checkplus:
    site-code: "TEMP_CODE" # Mandatory: Define in your .env file
    site-password: "TEMP_PASSWORD" # Mandatory: Define in your .env file
    base-callback-url: ${app.api.base-url}
    frontend-redirect-success-path: "/nice-auth-callback" # Default for dev, override in .env if needed
    frontend-redirect-fail-path: "/nice-auth-callback" # Default for dev, override in .env if needed

# *** 성능 모니터링 설정 ***
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,info,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
cors:
  allowed-origins: ${GLOBALS_ALLOW_ORIGIN}
